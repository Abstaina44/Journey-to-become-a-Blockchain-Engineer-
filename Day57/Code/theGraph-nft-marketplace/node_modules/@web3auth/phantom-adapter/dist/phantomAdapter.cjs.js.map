{"version":3,"file":"phantomAdapter.cjs.js","mappings":"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","sources":["webpack://@web3auth/phantom-adapter/webpack/bootstrap","webpack://@web3auth/phantom-adapter/webpack/runtime/compat get default export","webpack://@web3auth/phantom-adapter/webpack/runtime/define property getters","webpack://@web3auth/phantom-adapter/webpack/runtime/hasOwnProperty shorthand","webpack://@web3auth/phantom-adapter/webpack/runtime/make namespace object","webpack://@web3auth/phantom-adapter/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@web3auth/phantom-adapter/external commonjs2 \"@web3auth/base\"","webpack://@web3auth/phantom-adapter/external commonjs2 \"@web3auth/base-solana-adapter\"","webpack://@web3auth/phantom-adapter/external commonjs2 \"@web3auth/solana-provider\"","webpack://@web3auth/phantom-adapter/./src/utils.ts","webpack://@web3auth/phantom-adapter/./src/phantomAdapter.ts","webpack://@web3auth/phantom-adapter/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/base\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/base-solana-adapter\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/solana-provider\");","import type { IPhantomWalletProvider } from \"@web3auth/solana-provider\";\n\nexport function poll(callback: () => boolean | Promise<boolean>, interval: number, count: number): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    if (count > 0) {\n      setTimeout(async () => {\n        const done = await callback();\n        if (done) resolve(done);\n        if (!done)\n          poll(callback, interval, count - 1)\n            .then((res) => {\n              resolve(res);\n              return res;\n            })\n            .catch((err) => reject(err));\n      }, interval);\n    } else {\n      resolve(false);\n    }\n  });\n}\n\nexport const detectProvider = async (\n  options: { interval: number; count: number } = { interval: 1000, count: 3 }\n): Promise<IPhantomWalletProvider | null> => {\n  const isPhantomAvailable = typeof window !== \"undefined\" && !!(window as any).solana?.isPhantom;\n  if (isPhantomAvailable) {\n    return (window as any).solana;\n  }\n  const isAvailable = await poll(() => (window as any).solana?.isPhantom, options.interval, options.count);\n  if (isAvailable) return (window as any).solana;\n  return null;\n};\n","import {\n  ADAPTER_CATEGORY,\n  ADAPTER_CATEGORY_TYPE,\n  ADAPTER_EVENTS,\n  ADAPTER_NAMESPACES,\n  ADAPTER_STATUS,\n  ADAPTER_STATUS_TYPE,\n  AdapterInitOptions,\n  AdapterNamespaceType,\n  CHAIN_NAMESPACES,\n  ChainNamespaceType,\n  CONNECTED_EVENT_DATA,\n  CustomChainConfig,\n  getChainConfig,\n  log,\n  SafeEventEmitterProvider,\n  UserInfo,\n  WALLET_ADAPTERS,\n  WalletInitializationError,\n  WalletLoginError,\n  Web3AuthError,\n} from \"@web3auth/base\";\nimport { BaseSolanaAdapter } from \"@web3auth/base-solana-adapter\";\nimport { IPhantomWalletProvider, PhantomInjectedProvider } from \"@web3auth/solana-provider\";\n\nimport { detectProvider } from \"./utils\";\nexport interface PhantomAdapterOptions {\n  chainConfig?: CustomChainConfig;\n  sessionTime?: number;\n}\n\nexport class PhantomAdapter extends BaseSolanaAdapter<void> {\n  readonly name: string = WALLET_ADAPTERS.PHANTOM;\n\n  readonly adapterNamespace: AdapterNamespaceType = ADAPTER_NAMESPACES.SOLANA;\n\n  readonly currentChainNamespace: ChainNamespaceType = CHAIN_NAMESPACES.SOLANA;\n\n  readonly type: ADAPTER_CATEGORY_TYPE = ADAPTER_CATEGORY.EXTERNAL;\n\n  public status: ADAPTER_STATUS_TYPE = ADAPTER_STATUS.NOT_READY;\n\n  public _wallet: IPhantomWalletProvider | null = null;\n\n  private phantomProvider: PhantomInjectedProvider | null = null;\n\n  private rehydrated = false;\n\n  constructor(options: PhantomAdapterOptions = {}) {\n    super();\n    this.chainConfig = options.chainConfig || null;\n    this.sessionTime = options.sessionTime || 86400;\n  }\n\n  get isWalletConnected(): boolean {\n    return !!(this._wallet?.isConnected && this.status === ADAPTER_STATUS.CONNECTED);\n  }\n\n  get provider(): SafeEventEmitterProvider | null {\n    return this.phantomProvider?.provider || null;\n  }\n\n  set provider(_: SafeEventEmitterProvider | null) {\n    throw new Error(\"Not implemented\");\n  }\n\n  setAdapterSettings(options: { sessionTime?: number }): void {\n    if (this.status === ADAPTER_STATUS.READY) return;\n    if (options?.sessionTime) {\n      this.sessionTime = options.sessionTime;\n    }\n  }\n\n  async init(options: AdapterInitOptions): Promise<void> {\n    super.checkInitializationRequirements();\n    // set chainConfig for mainnet by default if not set\n    if (!this.chainConfig) {\n      this.chainConfig = getChainConfig(CHAIN_NAMESPACES.SOLANA, \"0x1\");\n    }\n    this._wallet = await detectProvider({ interval: 500, count: 3 });\n    if (!this._wallet) throw WalletInitializationError.notInstalled();\n    this.phantomProvider = new PhantomInjectedProvider({ config: { chainConfig: this.chainConfig as CustomChainConfig } });\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.PHANTOM);\n\n    try {\n      log.debug(\"initializing phantom adapter\");\n      if (options.autoConnect) {\n        this.rehydrated = true;\n        await this.connect();\n      }\n    } catch (error) {\n      log.error(\"Failed to connect with cached phantom provider\", error);\n      this.emit(\"ERRORED\", error);\n    }\n  }\n\n  async connect(): Promise<SafeEventEmitterProvider | null> {\n    try {\n      super.checkConnectionRequirements();\n      this.status = ADAPTER_STATUS.CONNECTING;\n      this.emit(ADAPTER_EVENTS.CONNECTING, { adapter: WALLET_ADAPTERS.PHANTOM });\n\n      if (!this._wallet) throw WalletInitializationError.notInstalled();\n      if (!this._wallet.isConnected) {\n        const handleDisconnect = this._wallet._handleDisconnect;\n        try {\n          await new Promise<SafeEventEmitterProvider | null>((resolve, reject) => {\n            const connect = async () => {\n              await this.connectWithProvider(this._wallet as IPhantomWalletProvider);\n              resolve(this.provider);\n            };\n            if (!this._wallet) return reject(WalletInitializationError.notInstalled());\n            this._wallet.once(\"connect\", connect);\n            // Raise an issue on phantom that if window is closed, disconnect event is not fired\n            (this._wallet as IPhantomWalletProvider)._handleDisconnect = (...args: unknown[]) => {\n              reject(WalletInitializationError.windowClosed());\n              return handleDisconnect.apply(this._wallet, args);\n            };\n\n            this._wallet.connect().catch((reason: unknown) => {\n              reject(reason);\n            });\n          });\n        } catch (error: unknown) {\n          if (error instanceof Web3AuthError) throw error;\n          throw WalletLoginError.connectionError((error as Error)?.message);\n        } finally {\n          this._wallet._handleDisconnect = handleDisconnect;\n        }\n      } else {\n        await this.connectWithProvider(this._wallet);\n      }\n\n      if (!this._wallet.publicKey) throw WalletLoginError.connectionError();\n      this._wallet.on(\"disconnect\", this._onDisconnect);\n\n      return this.provider;\n    } catch (error: unknown) {\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.rehydrated = false;\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n      throw error;\n    }\n  }\n\n  async disconnect(options: { cleanup: boolean } = { cleanup: false }): Promise<void> {\n    await super.disconnect();\n    try {\n      await this._wallet?.disconnect();\n      if (options.cleanup) {\n        this.status = ADAPTER_STATUS.NOT_READY;\n        this.phantomProvider = null;\n        this._wallet = null;\n      }\n      this.emit(ADAPTER_EVENTS.DISCONNECTED);\n    } catch (error: unknown) {\n      this.emit(ADAPTER_EVENTS.ERRORED, WalletLoginError.disconnectionError((error as Error)?.message));\n    }\n  }\n\n  async getUserInfo(): Promise<Partial<UserInfo>> {\n    if (!this.isWalletConnected) throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n    return {};\n  }\n\n  private async connectWithProvider(injectedProvider: IPhantomWalletProvider): Promise<SafeEventEmitterProvider | null> {\n    if (!this.phantomProvider) throw WalletLoginError.connectionError(\"No phantom provider\");\n    await this.phantomProvider.setupProvider(injectedProvider);\n    this.status = ADAPTER_STATUS.CONNECTED;\n    this.emit(ADAPTER_EVENTS.CONNECTED, { adapter: WALLET_ADAPTERS.PHANTOM, reconnected: this.rehydrated } as CONNECTED_EVENT_DATA);\n    return this.provider;\n  }\n\n  private _onDisconnect = () => {\n    if (this._wallet) {\n      this._wallet.off(\"disconnect\", this._onDisconnect);\n      this.rehydrated = false;\n      // ready to be connected again only if it was previously connected and not cleaned up\n      this.status = this.status === ADAPTER_STATUS.CONNECTED ? ADAPTER_STATUS.READY : ADAPTER_STATUS.NOT_READY;\n      this.emit(ADAPTER_EVENTS.DISCONNECTED);\n    }\n  };\n}\n","export * from \"./phantomAdapter\";\n"],"names":["poll","callback","interval","count","Promise","resolve","reject","setTimeout","done","then","res","catch","err","detectProvider","options","isPhantomAvailable","window","solana","isPhantom","isAvailable","ADAPTER_CATEGORY","ADAPTER_EVENTS","ADAPTER_NAMESPACES","ADAPTER_STATUS","CHAIN_NAMESPACES","getChainConfig","log","WALLET_ADAPTERS","WalletInitializationError","WalletLoginError","Web3AuthError","BaseSolanaAdapter","PhantomInjectedProvider","PhantomAdapter","constructor","PHANTOM","SOLANA","EXTERNAL","NOT_READY","_wallet","off","_onDisconnect","rehydrated","status","CONNECTED","READY","emit","DISCONNECTED","chainConfig","sessionTime","isWalletConnected","isConnected","provider","phantomProvider","_","Error","setAdapterSettings","init","checkInitializationRequirements","notInstalled","config","debug","autoConnect","connect","error","checkConnectionRequirements","CONNECTING","adapter","handleDisconnect","_handleDisconnect","connectWithProvider","once","windowClosed","args","apply","reason","connectionError","message","publicKey","on","ERRORED","disconnect","cleanup","disconnectionError","getUserInfo","notConnectedError","injectedProvider","setupProvider","reconnected"],"sourceRoot":""}