{"version":3,"file":"web3auth.cjs.js","mappings":"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","sources":["webpack://@web3auth/web3auth/./src/config.ts","webpack://@web3auth/web3auth/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@web3auth/web3auth/external commonjs2 \"@web3auth/core\"","webpack://@web3auth/web3auth/external commonjs2 \"@web3auth/ui\"","webpack://@web3auth/web3auth/./src/default.ts","webpack://@web3auth/web3auth/./src/modalManager.ts","webpack://@web3auth/web3auth/external commonjs2 \"@web3auth/base\"","webpack://@web3auth/web3auth/external commonjs2 \"@web3auth/metamask-adapter\"","webpack://@web3auth/web3auth/external commonjs2 \"@web3auth/openlogin-adapter\"","webpack://@web3auth/web3auth/external commonjs2 \"@web3auth/phantom-adapter\"","webpack://@web3auth/web3auth/external commonjs2 \"@web3auth/torus-evm-adapter\"","webpack://@web3auth/web3auth/external commonjs2 \"@web3auth/torus-solana-adapter\"","webpack://@web3auth/web3auth/external commonjs2 \"@web3auth/wallet-connect-v1-adapter\"","webpack://@web3auth/web3auth/webpack/bootstrap","webpack://@web3auth/web3auth/webpack/runtime/compat get default export","webpack://@web3auth/web3auth/webpack/runtime/create fake namespace object","webpack://@web3auth/web3auth/webpack/runtime/define property getters","webpack://@web3auth/web3auth/webpack/runtime/hasOwnProperty shorthand","webpack://@web3auth/web3auth/webpack/runtime/make namespace object","webpack://@web3auth/web3auth/./src/index.ts"],"sourcesContent":["import { CHAIN_NAMESPACES, EVM_ADAPTERS, SOLANA_ADAPTERS } from \"@web3auth/base\";\n\nimport { AdaptersModalConfig } from \"./interface\";\n\nexport const defaultSolanaDappModalConfig: AdaptersModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.SOLANA,\n  adapters: {\n    [SOLANA_ADAPTERS.TORUS_SOLANA]: {\n      label: \"Torus Wallet\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n    [SOLANA_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n    [SOLANA_ADAPTERS.PHANTOM]: {\n      label: \"Phantom\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n  },\n};\n\nexport const defaultEvmDappModalConfig: AdaptersModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.EIP155,\n  adapters: {\n    [EVM_ADAPTERS.TORUS_EVM]: {\n      label: \"Torus Wallet\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n    [EVM_ADAPTERS.METAMASK]: {\n      label: \"MetaMask\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n    [EVM_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n    [EVM_ADAPTERS.WALLET_CONNECT_V1]: {\n      label: \"Wallet Connect\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n  },\n};\n\nexport const defaultSolanaWalletModalConfig: AdaptersModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.SOLANA,\n  adapters: {\n    [SOLANA_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n  },\n};\n\nexport const defaultEvmWalletModalConfig: AdaptersModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.EIP155,\n  adapters: {\n    [EVM_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n  },\n};\n\nexport const defaultOtherModalConfig: AdaptersModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.OTHER,\n  adapters: {\n    [EVM_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n  },\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/core\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/ui\");","import type { OpenLoginOptions } from \"@toruslabs/openlogin\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, getChainConfig, IAdapter, WALLET_ADAPTER_TYPE, WALLET_ADAPTERS } from \"@web3auth/base\";\n\nexport const getDefaultAdapterModule = async (params: {\n  name: WALLET_ADAPTER_TYPE;\n  clientId: string;\n  customChainConfig: Partial<CustomChainConfig> & Pick<CustomChainConfig, \"chainNamespace\">;\n}): Promise<IAdapter<unknown>> => {\n  const { name, customChainConfig, clientId } = params;\n  if (!Object.values(CHAIN_NAMESPACES).includes(customChainConfig.chainNamespace))\n    throw new Error(`Invalid chainNamespace: ${customChainConfig.chainNamespace}`);\n  const finalChainConfig = {\n    ...(getChainConfig(customChainConfig.chainNamespace, customChainConfig?.chainId) as CustomChainConfig),\n    ...(customChainConfig || {}),\n  };\n  if (name === WALLET_ADAPTERS.TORUS_EVM) {\n    const { TorusWalletAdapter } = await import(\"@web3auth/torus-evm-adapter\");\n    const adapter = new TorusWalletAdapter({ chainConfig: finalChainConfig });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.TORUS_SOLANA) {\n    const { SolanaWalletAdapter } = await import(\"@web3auth/torus-solana-adapter\");\n    const adapter = new SolanaWalletAdapter({ chainConfig: finalChainConfig });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.METAMASK) {\n    const { MetamaskAdapter } = await import(\"@web3auth/metamask-adapter\");\n    const adapter = new MetamaskAdapter({ chainConfig: finalChainConfig });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.PHANTOM) {\n    const { PhantomAdapter } = await import(\"@web3auth/phantom-adapter\");\n    const adapter = new PhantomAdapter({ chainConfig: finalChainConfig });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.WALLET_CONNECT_V1) {\n    const { WalletConnectV1Adapter } = await import(\"@web3auth/wallet-connect-v1-adapter\");\n    const adapter = new WalletConnectV1Adapter({ chainConfig: finalChainConfig });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.OPENLOGIN) {\n    const { OpenloginAdapter, getOpenloginDefaultOptions } = await import(\"@web3auth/openlogin-adapter\");\n    const defaultOptions = getOpenloginDefaultOptions(customChainConfig.chainNamespace, customChainConfig?.chainId);\n    const adapter = new OpenloginAdapter({\n      ...defaultOptions,\n      chainConfig: { ...(defaultOptions.chainConfig || {}), ...finalChainConfig },\n      adapterSettings: { ...(defaultOptions.adapterSettings as OpenLoginOptions), clientId },\n    });\n    return adapter;\n  }\n  throw new Error(\"Invalid wallet adapter name\");\n};\n","import {\n  ADAPTER_CATEGORY,\n  ADAPTER_EVENTS,\n  ADAPTER_STATUS,\n  BaseAdapterConfig,\n  CHAIN_NAMESPACES,\n  CustomChainConfig,\n  getChainConfig,\n  log,\n  SafeEventEmitterProvider,\n  WALLET_ADAPTER_TYPE,\n  WALLET_ADAPTERS,\n} from \"@web3auth/base\";\nimport { Web3AuthCore, Web3AuthCoreOptions } from \"@web3auth/core\";\nimport LoginModal, { getAdapterSocialLogins, LOGIN_MODAL_EVENTS, OPENLOGIN_PROVIDERS } from \"@web3auth/ui\";\n\nimport {\n  defaultEvmDappModalConfig,\n  defaultEvmWalletModalConfig,\n  defaultOtherModalConfig,\n  defaultSolanaDappModalConfig,\n  defaultSolanaWalletModalConfig,\n} from \"./config\";\nimport { getDefaultAdapterModule } from \"./default\";\nimport { AdaptersModalConfig, ModalConfig } from \"./interface\";\n\nexport interface UIConfig {\n  /**\n   * Logo for your app.\n   */\n  appLogo?: string;\n\n  /**\n   * theme for the modal\n   *\n   * @defaultValue `light`\n   */\n  theme?: \"light\" | \"dark\";\n\n  /**\n   * order of how login methods are shown\n   *\n   * @defaultValue `[\"google\", \"facebook\", \"twitter\", \"reddit\", \"discord\", \"twitch\", \"apple\", \"line\", \"github\", \"kakao\", \"linkedin\", \"weibo\", \"wechat\", \"email_passwordless\"]`\n   */\n  loginMethodsOrder?: string[];\n}\nexport interface Web3AuthOptions extends Web3AuthCoreOptions {\n  /**\n   * Client id for web3auth.\n   * You can obtain your client id from the web3auth developer dashboard.\n   * You can set any random string for this on localhost.\n   */\n  clientId: string;\n\n  /**\n   * web3auth instance provides different adapters for different type of usages. If you are dapp and want to\n   * use external wallets like metamask, then you can use the `DAPP` authMode.\n   * If you are a wallet and only want to use you own wallet implementations along with openlogin,\n   * then you should use `WALLET` authMode.\n   *\n   * @defaultValue `DAPP`\n   */\n  authMode?: \"DAPP\" | \"WALLET\";\n  /**\n   * Config for configuring modal ui display properties\n   */\n  uiConfig?: UIConfig;\n\n  /**\n   * Whether to show errors on Web3Auth modal.\n   *\n   * @defaultValue `true`\n   */\n  displayErrorsOnModal?: boolean;\n}\nexport class Web3Auth extends Web3AuthCore {\n  public loginModal: LoginModal;\n\n  readonly options: Web3AuthOptions;\n\n  private modalConfig: AdaptersModalConfig = defaultEvmDappModalConfig;\n\n  constructor(options: Web3AuthOptions) {\n    super(options);\n    this.options = { ...options };\n    const providedChainConfig = this.options.chainConfig;\n    if (providedChainConfig.chainNamespace === CHAIN_NAMESPACES.SOLANA) {\n      if (options.authMode === \"WALLET\") {\n        // default config for solana wallet modal\n        this.modalConfig = defaultSolanaWalletModalConfig;\n      } else {\n        // default config for solana dapp modal\n        this.modalConfig = defaultSolanaDappModalConfig;\n      }\n    } else if (providedChainConfig.chainNamespace === CHAIN_NAMESPACES.EIP155) {\n      if (options.authMode === \"WALLET\") {\n        // default config for evm wallet modal\n        this.modalConfig = defaultEvmWalletModalConfig;\n      } else {\n        // default config for evm dapp modal\n        this.modalConfig = defaultEvmDappModalConfig;\n      }\n    } else if (providedChainConfig.chainNamespace === CHAIN_NAMESPACES.OTHER) {\n      this.modalConfig = defaultOtherModalConfig;\n    } else {\n      throw new Error(`Invalid chainNamespace provided: ${providedChainConfig.chainNamespace}`);\n    }\n    this.loginModal = new LoginModal({\n      theme: this.options.uiConfig?.theme,\n      appLogo: this.options.uiConfig?.appLogo || \"\",\n      version: \"\",\n      adapterListener: this,\n      displayErrorsOnModal: this.options.displayErrorsOnModal,\n    });\n    this.subscribeToLoginModalEvents();\n  }\n\n  public async initModal(params?: { modalConfig?: Record<WALLET_ADAPTER_TYPE, ModalConfig> }): Promise<void> {\n    super.checkInitRequirements();\n    await this.loginModal.initModal();\n    const providedChainConfig = this.options.chainConfig;\n\n    // merge default adapters with the custom configured adapters.\n    const allAdapters = [...new Set([...Object.keys(this.modalConfig.adapters || {}), ...Object.keys(this.walletAdapters)])];\n\n    const adapterConfigurationPromises = allAdapters.map(async (adapterName) => {\n      // start with the default config of adapter.\n      let adapterConfig = this.modalConfig.adapters?.[adapterName] || {\n        label: adapterName,\n        showOnModal: true,\n        showOnMobile: true,\n        showOnDesktop: true,\n      };\n\n      // override the default config of adapter if some config is being provided by the user.\n      if (params?.modalConfig?.[adapterName]) {\n        adapterConfig = { ...adapterConfig, ...params.modalConfig[adapterName] };\n      }\n      (this.modalConfig.adapters as Record<WALLET_ADAPTER_TYPE, ModalConfig>)[adapterName] = adapterConfig as ModalConfig;\n\n      // check if adapter is configured/added by user and exist in walletAdapters map.\n      const adapter = this.walletAdapters[adapterName];\n      log.debug(\"adapter config\", adapterName, this.modalConfig.adapters?.[adapterName].showOnModal, adapter);\n\n      // if adapter is not custom configured then check if it is available in default adapters.\n      // and if adapter is not hidden by user\n      if (!adapter && this.modalConfig.adapters?.[adapterName].showOnModal) {\n        // if adapter is not configured and some default configuration is available, use it.\n        const ad = await getDefaultAdapterModule({\n          name: adapterName,\n          customChainConfig: this.options.chainConfig,\n          clientId: this.options.clientId,\n        });\n\n        this.walletAdapters[adapterName] = ad;\n\n        return adapterName;\n      } else if (adapter?.type === ADAPTER_CATEGORY.IN_APP || adapter?.type === ADAPTER_CATEGORY.EXTERNAL || adapterName === this.cachedAdapter) {\n        if (!this.modalConfig.adapters?.[adapterName].showOnModal) return;\n        // add client id to openlogin adapter, same web3auth client id can be used in openlogin.\n        // this id is being overridden if user is also passing client id in openlogin's adapter constructor.\n        if (adapterName === WALLET_ADAPTERS.OPENLOGIN) {\n          this.walletAdapters[adapterName].setAdapterSettings({ clientId: this.options.clientId, sessionTime: this.options.sessionTime });\n        } else {\n          this.walletAdapters[adapterName].setAdapterSettings({ sessionTime: this.options.sessionTime });\n        }\n\n        // if adapter doesn't have any chainConfig then we will set the chainConfig based of passed chainNamespace\n        // and chainNamespace.\n        if (!adapter.chainConfigProxy) {\n          const chainConfig = {\n            ...getChainConfig(providedChainConfig.chainNamespace, this.coreOptions.chainConfig?.chainId),\n            ...this.coreOptions.chainConfig,\n          } as CustomChainConfig;\n          this.walletAdapters[adapterName].setChainConfig(chainConfig);\n        }\n\n        return adapterName;\n      }\n    });\n\n    const adapterNames = await Promise.all(adapterConfigurationPromises);\n    const hasInAppWallets = Object.values(this.walletAdapters).some((adapter) => {\n      if (adapter.type !== ADAPTER_CATEGORY.IN_APP) return false;\n      if (this.modalConfig.adapters[adapter.name].showOnModal !== true) return false;\n      if (!this.modalConfig.adapters[adapter.name].loginMethods) return true;\n      const mergedLoginMethods = getAdapterSocialLogins(\n        adapter.name,\n        this.walletAdapters[adapter.name],\n        (this.modalConfig.adapters as Record<WALLET_ADAPTER_TYPE, ModalConfig>)[adapter.name]?.loginMethods\n      );\n      if (Object.values(mergedLoginMethods).some((method) => method.showOnModal)) return true;\n      return false;\n    });\n    log.debug(hasInAppWallets, this.walletAdapters, \"hasInAppWallets\");\n    // Now, initialize the adapters.\n    const initPromises = adapterNames.map(async (adapterName) => {\n      if (!adapterName) return;\n      try {\n        const adapter = this.walletAdapters[adapterName];\n        // only initialize a external adapter here if it is a cached adapter.\n        if (this.cachedAdapter !== adapterName && adapter.type === ADAPTER_CATEGORY.EXTERNAL) {\n          return;\n        }\n        // in-app wallets or cached wallet (being connected or already connected) are initialized first.\n        // if adapter is configured thn only initialize in app or cached adapter.\n        // external wallets are initialized on INIT_EXTERNAL_WALLET event.\n        this.subscribeToAdapterEvents(adapter);\n        if (adapter.status === ADAPTER_STATUS.NOT_READY) await adapter.init({ autoConnect: this.cachedAdapter === adapterName });\n        // note: not adding cachedWallet to modal if it is external wallet.\n        // adding it later if no in-app wallets are available.\n        if (adapter.type === ADAPTER_CATEGORY.IN_APP) {\n          this.initializeInAppWallet(adapterName);\n        }\n      } catch (error) {\n        log.error(error, \"error while initializing adapter\");\n      }\n    });\n\n    this.status = ADAPTER_STATUS.READY;\n    await Promise.all(initPromises);\n\n    const hasExternalWallets = allAdapters.some((adapterName) => {\n      return this.walletAdapters[adapterName]?.type === ADAPTER_CATEGORY.EXTERNAL && this.modalConfig.adapters?.[adapterName].showOnModal;\n    });\n\n    if (hasExternalWallets) {\n      this.loginModal.initExternalWalletContainer();\n    }\n\n    // variable to check if we have any in app wallets\n    // currently all default in app and external wallets can be hidden or shown based on config.\n    if (!hasInAppWallets && hasExternalWallets) {\n      // if no in app wallet is available then initialize external wallets in modal\n      await this.initExternalWalletAdapters(false, { showExternalWalletsOnly: true });\n    }\n  }\n\n  public async connect(): Promise<SafeEventEmitterProvider | null> {\n    // if (!this.loginModal.initialized) throw new Error(\"Login modal is not initialized\");\n    // if already connected return provider\n    if (this.provider) return this.provider;\n    this.loginModal.open();\n    return new Promise((resolve, reject) => {\n      this.once(ADAPTER_EVENTS.CONNECTED, () => {\n        return resolve(this.provider);\n      });\n      this.once(ADAPTER_EVENTS.ERRORED, (err: unknown) => {\n        return reject(err);\n      });\n    });\n  }\n\n  private async initExternalWalletAdapters(externalWalletsInitialized: boolean, options?: { showExternalWalletsOnly: boolean }): Promise<void> {\n    if (externalWalletsInitialized) return;\n    const adaptersConfig: Record<string, BaseAdapterConfig> = {};\n    const adaptersData: Record<string, unknown> = {};\n    const adapterPromises = Object.keys(this.walletAdapters).map(async (adapterName) => {\n      try {\n        const adapter = this.walletAdapters[adapterName];\n        if (adapter?.type === ADAPTER_CATEGORY.EXTERNAL) {\n          log.debug(\"init external wallet\", this.cachedAdapter, adapterName);\n          this.subscribeToAdapterEvents(adapter);\n          // we are not initializing cached adapter here as it is already being initialized in initModal before.\n          if (this.cachedAdapter === adapterName) {\n            return;\n          }\n          if (adapter.status === ADAPTER_STATUS.NOT_READY) await adapter.init({ autoConnect: this.cachedAdapter === adapterName });\n          adaptersConfig[adapterName] = (this.modalConfig.adapters as Record<WALLET_ADAPTER_TYPE, ModalConfig>)[adapterName];\n          adaptersData[adapterName] = adapter.adapterData || {};\n          return adapterName;\n        }\n      } catch (error) {\n        log.error(error, \"error while initializing adapter\");\n      }\n    });\n\n    const adapterInitResults = await Promise.all(adapterPromises);\n    const finalAdaptersConfig: Record<WALLET_ADAPTER_TYPE, BaseAdapterConfig> = {};\n    adapterInitResults.forEach((result: string | undefined) => {\n      if (result) {\n        finalAdaptersConfig[result] = adaptersConfig[result];\n      }\n    });\n    this.loginModal.addWalletLogins(finalAdaptersConfig, { showExternalWalletsOnly: !!options?.showExternalWalletsOnly });\n  }\n\n  private initializeInAppWallet(adapterName: string): void {\n    log.info(\"adapterInitResults\", adapterName);\n    if (this.walletAdapters[adapterName].type === ADAPTER_CATEGORY.IN_APP) {\n      this.loginModal.addSocialLogins(\n        adapterName,\n        getAdapterSocialLogins(\n          adapterName,\n          this.walletAdapters[adapterName],\n          (this.modalConfig.adapters as Record<WALLET_ADAPTER_TYPE, ModalConfig>)[adapterName]?.loginMethods\n        ),\n        this.options.uiConfig?.loginMethodsOrder || OPENLOGIN_PROVIDERS\n      );\n    }\n  }\n\n  private subscribeToLoginModalEvents(): void {\n    this.loginModal.on(LOGIN_MODAL_EVENTS.LOGIN, async (params: { adapter: WALLET_ADAPTER_TYPE; loginParams: unknown }) => {\n      try {\n        await this.connectTo<unknown>(params.adapter, params.loginParams);\n      } catch (error) {\n        log.error(`Error while connecting to adapter: ${params.adapter}`, error);\n      }\n    });\n    this.loginModal.on(LOGIN_MODAL_EVENTS.INIT_EXTERNAL_WALLETS, async (params: { externalWalletsInitialized: boolean }) => {\n      await this.initExternalWalletAdapters(params.externalWalletsInitialized);\n    });\n    this.loginModal.on(LOGIN_MODAL_EVENTS.DISCONNECT, async () => {\n      try {\n        await this.logout();\n      } catch (error) {\n        log.error(`Error while disconnecting`, error);\n      }\n    });\n    this.loginModal.on(LOGIN_MODAL_EVENTS.MODAL_VISIBILITY, async (visibility: boolean) => {\n      log.debug(\"is login modal visible\", visibility);\n      this.emit(LOGIN_MODAL_EVENTS.MODAL_VISIBILITY, visibility);\n      const walletConnectStatus = this.walletAdapters[WALLET_ADAPTERS.WALLET_CONNECT_V1]?.status;\n      if (visibility && walletConnectStatus === ADAPTER_STATUS.READY) {\n        // refreshing session for wallet connect whenever modal is opened.\n        try {\n          this.walletAdapters[WALLET_ADAPTERS.WALLET_CONNECT_V1].connect();\n        } catch (error) {\n          log.error(`Error while disconnecting to wallet connect in core`, error);\n        }\n      }\n    });\n  }\n}\n","module.exports = require(\"@web3auth/base\");","module.exports = require(\"@web3auth/metamask-adapter\");","module.exports = require(\"@web3auth/openlogin-adapter\");","module.exports = require(\"@web3auth/phantom-adapter\");","module.exports = require(\"@web3auth/torus-evm-adapter\");","module.exports = require(\"@web3auth/torus-solana-adapter\");","module.exports = require(\"@web3auth/wallet-connect-v1-adapter\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export * from \"./config\";\nexport * from \"./interface\";\nexport * from \"./modalManager\";\n"],"names":["CHAIN_NAMESPACES","EVM_ADAPTERS","SOLANA_ADAPTERS","defaultSolanaDappModalConfig","chainNamespace","SOLANA","adapters","TORUS_SOLANA","label","showOnModal","showOnMobile","showOnDesktop","OPENLOGIN","PHANTOM","defaultEvmDappModalConfig","EIP155","TORUS_EVM","METAMASK","WALLET_CONNECT_V1","defaultSolanaWalletModalConfig","defaultEvmWalletModalConfig","defaultOtherModalConfig","OTHER","getChainConfig","WALLET_ADAPTERS","getDefaultAdapterModule","params","name","customChainConfig","clientId","Object","values","includes","Error","finalChainConfig","chainId","TorusWalletAdapter","adapter","chainConfig","SolanaWalletAdapter","MetamaskAdapter","PhantomAdapter","WalletConnectV1Adapter","OpenloginAdapter","getOpenloginDefaultOptions","defaultOptions","adapterSettings","ADAPTER_CATEGORY","ADAPTER_EVENTS","ADAPTER_STATUS","log","Web3AuthCore","LoginModal","getAdapterSocialLogins","LOGIN_MODAL_EVENTS","OPENLOGIN_PROVIDERS","Web3Auth","constructor","options","providedChainConfig","authMode","modalConfig","loginModal","theme","uiConfig","appLogo","version","adapterListener","displayErrorsOnModal","subscribeToLoginModalEvents","initModal","checkInitRequirements","allAdapters","Set","keys","walletAdapters","adapterConfigurationPromises","map","adapterName","adapterConfig","debug","ad","type","IN_APP","EXTERNAL","cachedAdapter","setAdapterSettings","sessionTime","chainConfigProxy","coreOptions","setChainConfig","adapterNames","Promise","all","hasInAppWallets","some","loginMethods","mergedLoginMethods","method","initPromises","subscribeToAdapterEvents","status","NOT_READY","init","autoConnect","initializeInAppWallet","error","READY","hasExternalWallets","initExternalWalletContainer","initExternalWalletAdapters","showExternalWalletsOnly","connect","provider","open","resolve","reject","once","CONNECTED","ERRORED","err","externalWalletsInitialized","adaptersConfig","adaptersData","adapterPromises","adapterData","adapterInitResults","finalAdaptersConfig","forEach","result","addWalletLogins","info","addSocialLogins","loginMethodsOrder","on","LOGIN","connectTo","loginParams","INIT_EXTERNAL_WALLETS","DISCONNECT","logout","MODAL_VISIBILITY","visibility","emit","walletConnectStatus"],"sourceRoot":""}