{"version":3,"file":"baseSolanaAdapter.cjs.js","mappings":"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","sources":["webpack://@web3auth/base-solana-adapter/webpack/bootstrap","webpack://@web3auth/base-solana-adapter/webpack/runtime/compat get default export","webpack://@web3auth/base-solana-adapter/webpack/runtime/define property getters","webpack://@web3auth/base-solana-adapter/webpack/runtime/hasOwnProperty shorthand","webpack://@web3auth/base-solana-adapter/webpack/runtime/make namespace object","webpack://@web3auth/base-solana-adapter/external commonjs2 \"@web3auth/base\"","webpack://@web3auth/base-solana-adapter/external commonjs2 \"bs58\"","webpack://@web3auth/base-solana-adapter/./src/baseSolanaAdapter.ts","webpack://@web3auth/base-solana-adapter/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/base\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"bs58\");","import {\n  ADAPTER_STATUS,\n  BaseAdapter,\n  checkIfTokenIsExpired,\n  clearToken,\n  getSavedToken,\n  saveToken,\n  signChallenge,\n  UserAuthInfo,\n  verifySignedChallenge,\n  WalletLoginError,\n} from \"@web3auth/base\";\nimport bs58 from \"bs58\";\n\nexport abstract class BaseSolanaAdapter<T> extends BaseAdapter<T> {\n  async authenticateUser(): Promise<UserAuthInfo> {\n    if (!this.provider || !this.chainConfig?.chainId) throw WalletLoginError.notConnectedError();\n\n    const { chainNamespace, chainId } = this.chainConfig;\n\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n    const accounts = await this.provider.request<string[]>({\n      method: \"getAccounts\",\n    });\n    if (accounts && accounts.length > 0) {\n      const existingToken = getSavedToken(accounts[0] as string, this.name);\n      if (existingToken) {\n        const isExpired = checkIfTokenIsExpired(existingToken);\n        if (!isExpired) {\n          return { idToken: existingToken };\n        }\n      }\n\n      const payload = {\n        domain: window.location.origin,\n        uri: window.location.href,\n        address: accounts[0],\n        chainId: parseInt(chainId, 16),\n        version: \"1\",\n        nonce: Math.random().toString(36).slice(2),\n        issuedAt: new Date().toISOString(),\n      };\n\n      const challenge = await signChallenge(payload, chainNamespace);\n      const encodedMessage = new TextEncoder().encode(challenge);\n      const signedMessage = await this.provider.request<Uint8Array>({\n        method: \"signMessage\",\n        params: {\n          message: encodedMessage,\n          display: \"utf8\",\n        },\n      });\n      const idToken = await verifySignedChallenge(chainNamespace, bs58.encode(signedMessage as Uint8Array), challenge, this.name, this.sessionTime);\n      saveToken(accounts[0] as string, this.name, idToken);\n      return {\n        idToken,\n      };\n    }\n    throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n  }\n\n  async disconnect(): Promise<void> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.disconnectionError(\"Not connected with wallet\");\n    const accounts = await this.provider.request<string[]>({\n      method: \"getAccounts\",\n    });\n    if (accounts && accounts.length > 0) {\n      clearToken(accounts[0], this.name);\n    }\n  }\n}\n","export * from \"./baseSolanaAdapter\";\n"],"names":["ADAPTER_STATUS","BaseAdapter","checkIfTokenIsExpired","clearToken","getSavedToken","saveToken","signChallenge","verifySignedChallenge","WalletLoginError","bs58","BaseSolanaAdapter","authenticateUser","provider","chainConfig","chainId","notConnectedError","chainNamespace","status","CONNECTED","accounts","request","method","length","existingToken","name","isExpired","idToken","payload","domain","window","location","origin","uri","href","address","parseInt","version","nonce","Math","random","toString","slice","issuedAt","Date","toISOString","challenge","encodedMessage","TextEncoder","encode","signedMessage","params","message","display","sessionTime","disconnect","disconnectionError"],"sourceRoot":""}