{"version":3,"file":"walletConnectV1Adapter.cjs.js","mappings":"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","sources":["webpack://@web3auth/wallet-connect-v1-adapter/webpack/bootstrap","webpack://@web3auth/wallet-connect-v1-adapter/webpack/runtime/compat get default export","webpack://@web3auth/wallet-connect-v1-adapter/webpack/runtime/define property getters","webpack://@web3auth/wallet-connect-v1-adapter/webpack/runtime/hasOwnProperty shorthand","webpack://@web3auth/wallet-connect-v1-adapter/webpack/runtime/make namespace object","webpack://@web3auth/wallet-connect-v1-adapter/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@web3auth/wallet-connect-v1-adapter/external commonjs2 \"@walletconnect/client\"","webpack://@web3auth/wallet-connect-v1-adapter/external commonjs2 \"@web3auth/base\"","webpack://@web3auth/wallet-connect-v1-adapter/external commonjs2 \"@web3auth/base-evm-adapter\"","webpack://@web3auth/wallet-connect-v1-adapter/external commonjs2 \"@web3auth/ethereum-provider\"","webpack://@web3auth/wallet-connect-v1-adapter/./src/config.ts","webpack://@web3auth/wallet-connect-v1-adapter/./src/walletConnectV1adapter.ts","webpack://@web3auth/wallet-connect-v1-adapter/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@walletconnect/client\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/base\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/base-evm-adapter\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/ethereum-provider\");","import { CHAIN_NAMESPACES, IWalletConnectExtensionAdapter } from \"@web3auth/base\";\n\nexport const WALLET_CONNECT_EXTENSION_ADAPTERS: IWalletConnectExtensionAdapter[] = [\n  {\n    name: \"Rainbow\",\n    chains: [CHAIN_NAMESPACES.EIP155],\n    logo: \"https://images.web3auth.io/login-rainbow.svg\",\n    mobile: {\n      native: \"rainbow:\",\n      universal: \"https://rnbwapp.com\",\n    },\n    desktop: {\n      native: \"\",\n      universal: \"\",\n    },\n  },\n  {\n    name: \"MetaMask\",\n    chains: [CHAIN_NAMESPACES.EIP155],\n    logo: \"https://images.web3auth.io/login-metamask.svg\",\n    mobile: {\n      native: \"metamask:\",\n      universal: \"https://metamask.app.link\",\n    },\n    desktop: {\n      native: \"\",\n      universal: \"\",\n    },\n  },\n];\n","import WalletConnect from \"@walletconnect/client\";\nimport {\n  ADAPTER_CATEGORY,\n  ADAPTER_CATEGORY_TYPE,\n  ADAPTER_EVENTS,\n  ADAPTER_NAMESPACES,\n  ADAPTER_STATUS,\n  ADAPTER_STATUS_TYPE,\n  AdapterNamespaceType,\n  CHAIN_NAMESPACES,\n  ChainNamespaceType,\n  CONNECTED_EVENT_DATA,\n  CustomChainConfig,\n  getChainConfig,\n  log,\n  SafeEventEmitterProvider,\n  UserInfo,\n  WALLET_ADAPTERS,\n  WalletConnectV1Data,\n  WalletInitializationError,\n  WalletLoginError,\n  Web3AuthError,\n} from \"@web3auth/base\";\nimport { BaseEvmAdapter } from \"@web3auth/base-evm-adapter\";\nimport { WalletConnectProvider } from \"@web3auth/ethereum-provider\";\n\nimport { WALLET_CONNECT_EXTENSION_ADAPTERS } from \"./config\";\nimport { WalletConnectV1AdapterOptions } from \"./interface\";\n\nclass WalletConnectV1Adapter extends BaseEvmAdapter<void> {\n  readonly name: string = WALLET_ADAPTERS.WALLET_CONNECT_V1;\n\n  readonly adapterNamespace: AdapterNamespaceType = ADAPTER_NAMESPACES.EIP155;\n\n  readonly currentChainNamespace: ChainNamespaceType = CHAIN_NAMESPACES.EIP155;\n\n  readonly type: ADAPTER_CATEGORY_TYPE = ADAPTER_CATEGORY.EXTERNAL;\n\n  readonly adapterOptions: WalletConnectV1AdapterOptions;\n\n  public status: ADAPTER_STATUS_TYPE = ADAPTER_STATUS.NOT_READY;\n\n  public adapterData: WalletConnectV1Data = {\n    uri: \"\",\n    extensionAdapters: WALLET_CONNECT_EXTENSION_ADAPTERS,\n  };\n\n  public connector: WalletConnect | null = null;\n\n  private wcProvider: WalletConnectProvider | null = null;\n\n  private rehydrated = false;\n\n  constructor(options: WalletConnectV1AdapterOptions = {}) {\n    super();\n    this.adapterOptions = { ...options };\n    this.chainConfig = options.chainConfig || null;\n    this.sessionTime = options.sessionTime || 86400;\n  }\n\n  get connected(): boolean {\n    return !!this.connector?.connected;\n  }\n\n  get provider(): SafeEventEmitterProvider | null {\n    return this.wcProvider?.provider || null;\n  }\n\n  set provider(_: SafeEventEmitterProvider | null) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(): Promise<void> {\n    super.checkInitializationRequirements();\n    if (!this.chainConfig) {\n      this.chainConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, 1);\n    }\n    // Create a connector\n    this.connector = this.getWalletConnectInstance();\n    this.wcProvider = new WalletConnectProvider({ config: { chainConfig: this.chainConfig as CustomChainConfig }, connector: this.connector });\n\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.WALLET_CONNECT_V1);\n    this.status = ADAPTER_STATUS.READY;\n    log.debug(\"initializing wallet connect v1 adapter\");\n    if (this.connector.connected) {\n      this.rehydrated = true;\n      await this.onConnectHandler({ accounts: this.connector.accounts, chainId: this.connector.chainId });\n    }\n  }\n\n  async connect(): Promise<SafeEventEmitterProvider | null> {\n    super.checkConnectionRequirements();\n    if (!this.connector) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n\n    if (this.connected) {\n      await this.onConnectHandler({ accounts: this.connector.accounts, chainId: this.connector.chainId });\n      return this.provider;\n    }\n\n    if (this.status !== ADAPTER_STATUS.CONNECTING) {\n      // for wallet connect qr code modal we have to create a new connector, coz wallet connect internally does not open\n      // modal again on existing instance if connection is pending.\n      if (this.adapterOptions.adapterSettings?.qrcodeModal) {\n        this.connector = this.getWalletConnectInstance();\n        this.wcProvider = new WalletConnectProvider({\n          config: {\n            chainConfig: this.chainConfig as CustomChainConfig,\n            // network switching can be skipped with custom ui\n            skipLookupNetwork: this.adapterOptions.adapterSettings?.skipNetworkSwitching,\n          },\n          connector: this.connector,\n        });\n      }\n      await this.createNewSession();\n      this.status = ADAPTER_STATUS.CONNECTING;\n      this.emit(ADAPTER_EVENTS.CONNECTING, { adapter: WALLET_ADAPTERS.WALLET_CONNECT_V1 });\n    }\n    return new Promise((resolve, reject) => {\n      if (!this.connector) return reject(WalletInitializationError.notReady(\"Wallet adapter is not ready yet\"));\n      // for wallet connect default modal.\n      this.connector.on(\"modal_closed\", async () => {\n        this.status = ADAPTER_STATUS.READY;\n        this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.WALLET_CONNECT_V1);\n        return reject(new Error(\"User closed modal\"));\n      });\n      try {\n        // Subscribe to session connection\n        this.connector.on(\"connect\", async (error: Error | null, payload: { params: { accounts: string[]; chainId: number }[] }) => {\n          if (error) {\n            this.emit(ADAPTER_EVENTS.ERRORED, error);\n          }\n          log.debug(\"connected event emitted by web3auth\");\n          await this.onConnectHandler(payload.params[0]);\n          return resolve(this.provider);\n        });\n      } catch (error: unknown) {\n        log.error(\"Wallet connect v1 adapter error while connecting\", error);\n        // ready again to be connected\n        this.status = ADAPTER_STATUS.READY;\n        this.rehydrated = true;\n        this.emit(ADAPTER_EVENTS.ERRORED, error);\n        reject(\n          error instanceof Web3AuthError\n            ? error\n            : WalletLoginError.connectionError(`Failed to login with wallet connect: ${(error as Error)?.message || \"\"}`)\n        );\n      }\n    });\n  }\n\n  setAdapterSettings(options: { sessionTime?: number }): void {\n    if (this.status === ADAPTER_STATUS.READY) return;\n    if (options?.sessionTime) {\n      this.sessionTime = options.sessionTime;\n    }\n  }\n\n  async getUserInfo(): Promise<Partial<UserInfo>> {\n    if (!this.connected) throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n    return {};\n  }\n\n  async disconnect(options: { cleanup: boolean } = { cleanup: false }): Promise<void> {\n    const { cleanup } = options;\n    if (!this.connector || !this.connected) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    await super.disconnect();\n    await this.connector.killSession();\n    this.rehydrated = false;\n    if (cleanup) {\n      this.connector = null;\n      this.status = ADAPTER_STATUS.NOT_READY;\n      this.wcProvider = null;\n    } else {\n      // ready to connect again\n      this.status = ADAPTER_STATUS.READY;\n    }\n    this.emit(ADAPTER_EVENTS.DISCONNECTED);\n  }\n\n  private async addChain(chainConfig: CustomChainConfig): Promise<void> {\n    try {\n      if (!this.wcProvider) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n      const networkSwitch = this.adapterOptions.adapterSettings?.networkSwitchModal;\n      if (networkSwitch) {\n        await networkSwitch.addNetwork({ chainConfig, appOrigin: window.location.hostname });\n      }\n      await this.wcProvider.addChain(chainConfig);\n    } catch (error) {\n      log.error(error);\n    }\n  }\n\n  private async switchChain(connectedChainConfig: Partial<CustomChainConfig>, chainConfig: CustomChainConfig): Promise<void> {\n    if (!this.wcProvider) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n    const networkSwitch = this.adapterOptions.adapterSettings?.networkSwitchModal;\n\n    if (networkSwitch) {\n      await networkSwitch.switchNetwork({\n        currentChainConfig: chainConfig,\n        newChainConfig: connectedChainConfig,\n        appOrigin: window.location.hostname,\n      });\n    }\n    await this.wcProvider.switchChain({ chainId: chainConfig.chainId, lookup: false, addChain: false });\n  }\n\n  private async createNewSession(opts: { forceNewSession: boolean } = { forceNewSession: false }): Promise<void> {\n    if (!this.connector) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n    if (opts.forceNewSession && this.connector.pending) {\n      await this.connector.killSession();\n    }\n    // for wallet connect qr modal\n    if (this.adapterOptions?.adapterSettings?.qrcodeModal) {\n      await this.connector.createSession({ chainId: parseInt(this.chainConfig?.chainId || \"0x1\", 16) });\n      return;\n    }\n\n    // for web3auth qr code modal\n    return new Promise<void>((resolve, reject) => {\n      if (!this.connector) return reject(WalletInitializationError.notReady(\"Wallet adapter is not ready yet\"));\n      log.debug(\"creating new session for web3auth wallet connect\");\n      this.connector.on(\"display_uri\", async (err, payload) => {\n        if (err) {\n          this.emit(ADAPTER_EVENTS.ERRORED, WalletLoginError.connectionError(\"Failed to display wallet connect qr code\"));\n          return reject(err);\n        }\n        const uri = payload.params[0];\n        this.updateAdapterData({ uri, extensionAdapters: WALLET_CONNECT_EXTENSION_ADAPTERS } as WalletConnectV1Data);\n\n        this.connector?.off(\"display_uri\");\n        return resolve();\n      });\n\n      this.connector.createSession({ chainId: parseInt(this.chainConfig?.chainId || \"0x1\", 16) }).catch((error) => {\n        log.error(\"error while creating new wallet connect session\", error);\n        this.emit(ADAPTER_EVENTS.ERRORED, error);\n        return reject(error);\n      });\n    });\n  }\n\n  private async onConnectHandler(params: { accounts: string[]; chainId: number }) {\n    if (!this.connector || !this.wcProvider) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n    if (!this.chainConfig) throw WalletInitializationError.invalidParams(\"Chain config is not set\");\n\n    const { chainId } = params;\n    log.debug(\"connected chainId in hex\");\n    if (chainId !== parseInt(this.chainConfig.chainId, 16)) {\n      const connectedChainConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, chainId) || {\n        chainId: `0x${chainId.toString(16)}`,\n        displayName: \"Unknown Network\",\n      };\n\n      const isCustomUi = this.adapterOptions.adapterSettings?.qrcodeModal;\n      // skipping network is not allowed in default ui. We are use network switching modal for default ui.\n      if (!isCustomUi || (isCustomUi && !this.adapterOptions?.adapterSettings?.skipNetworkSwitching)) {\n        try {\n          await this.addChain(this.chainConfig);\n          await this.switchChain(connectedChainConfig, this.chainConfig);\n          this.connector = this.getWalletConnectInstance();\n        } catch (error) {\n          log.error(\"error while chain switching\", error);\n          // we need to create a new session since old session is already used and\n          // user needs to login again with correct chain with new qr code.\n          await this.createNewSession({ forceNewSession: true });\n          this.emit(\n            ADAPTER_EVENTS.ERRORED,\n            WalletInitializationError.fromCode(\n              5000,\n              `Not connected to correct network. Expected: ${this.chainConfig.displayName}, Current: ${\n                connectedChainConfig?.displayName || chainId\n              }, Please switch to correct network from wallet`\n            )\n          );\n          this.status = ADAPTER_STATUS.READY;\n          this.rehydrated = true;\n          return;\n        }\n      }\n    }\n    await this.wcProvider.setupProvider(this.connector);\n    this.subscribeEvents(this.connector);\n    this.status = ADAPTER_STATUS.CONNECTED;\n    this.emit(ADAPTER_EVENTS.CONNECTED, { adapter: WALLET_ADAPTERS.WALLET_CONNECT_V1, reconnected: this.rehydrated } as CONNECTED_EVENT_DATA);\n  }\n\n  private subscribeEvents(connector: WalletConnect): void {\n    connector.on(\"session_update\", async (error: Error | null) => {\n      if (error) {\n        this.emit(ADAPTER_EVENTS.ERRORED, error);\n      }\n    });\n  }\n\n  private getWalletConnectInstance(): WalletConnect {\n    const walletConnectOptions = this.adapterOptions.adapterSettings || {};\n    walletConnectOptions.bridge = walletConnectOptions.bridge || \"https://bridge.walletconnect.org\";\n    // Create a connector\n    return new WalletConnect(walletConnectOptions);\n  }\n}\n\nexport { WalletConnectV1Adapter };\n","export * from \"./interface\";\nexport * from \"./walletConnectV1adapter\";\n"],"names":["CHAIN_NAMESPACES","WALLET_CONNECT_EXTENSION_ADAPTERS","name","chains","EIP155","logo","mobile","native","universal","desktop","WalletConnect","ADAPTER_CATEGORY","ADAPTER_EVENTS","ADAPTER_NAMESPACES","ADAPTER_STATUS","getChainConfig","log","WALLET_ADAPTERS","WalletInitializationError","WalletLoginError","Web3AuthError","BaseEvmAdapter","WalletConnectProvider","WalletConnectV1Adapter","constructor","options","WALLET_CONNECT_V1","EXTERNAL","NOT_READY","uri","extensionAdapters","adapterOptions","chainConfig","sessionTime","connected","connector","provider","wcProvider","_","Error","init","checkInitializationRequirements","getWalletConnectInstance","config","emit","READY","status","debug","rehydrated","onConnectHandler","accounts","chainId","connect","checkConnectionRequirements","notReady","CONNECTING","adapterSettings","qrcodeModal","skipLookupNetwork","skipNetworkSwitching","createNewSession","adapter","Promise","resolve","reject","on","error","payload","ERRORED","params","connectionError","message","setAdapterSettings","getUserInfo","notConnectedError","disconnect","cleanup","killSession","DISCONNECTED","addChain","networkSwitch","networkSwitchModal","addNetwork","appOrigin","window","location","hostname","switchChain","connectedChainConfig","switchNetwork","currentChainConfig","newChainConfig","lookup","opts","forceNewSession","pending","createSession","parseInt","err","updateAdapterData","off","catch","invalidParams","toString","displayName","isCustomUi","fromCode","setupProvider","subscribeEvents","CONNECTED","reconnected","walletConnectOptions","bridge"],"sourceRoot":""}