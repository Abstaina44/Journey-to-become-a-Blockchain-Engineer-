import MoralisCore from '@moralisweb3/core';
import { EvmAddressish, EvmChainish } from '@moralisweb3/evm-utils';
export declare enum StreamNetwork {
    EVM = "evm"
}
export interface UpdateStreamEvmOptions {
    network: 'evm';
    webhookUrl: string;
    description: string;
    tag: string;
    tokenAddress?: EvmAddressish;
    includeNativeTxs?: boolean;
    topic0?: string;
    abi?: {
        [key: string]: unknown;
    };
    filter?: {
        [key: string]: unknown;
    };
    address?: EvmAddressish;
    chains: EvmChainish[];
    type: 'wallet' | 'contract';
    id: string;
}
export declare type UpdateStreamOptions = UpdateStreamEvmOptions;
export declare const updateStream: (core: MoralisCore) => (options: UpdateStreamOptions) => Promise<import("@moralisweb3/api-utils").ApiResultAdapter<{
    webhookUrl: string;
    description: string;
    tag: string;
    tokenAddress?: string | null | undefined;
    topic0?: string | null | undefined;
    includeNativeTxs?: boolean | undefined;
    abi?: {
        [key: string]: unknown;
    } | null | undefined;
    filter?: {
        [key: string]: unknown;
    } | null | undefined;
    address?: string | null | undefined;
    chainIds: string[];
    type: "wallet" | "contract";
    id?: string | undefined;
    status?: "active" | "paused" | "error" | undefined;
}, {
    address: import("@moralisweb3/evm-utils").EvmAddress | undefined;
    tokenAddress: import("@moralisweb3/evm-utils").EvmAddress | undefined;
    chains: import("@moralisweb3/evm-utils").EvmChain[];
    webhookUrl: string;
    description: string;
    tag: string;
    topic0?: string | null | undefined;
    includeNativeTxs?: boolean | undefined;
    abi?: {
        [key: string]: unknown;
    } | null | undefined;
    filter?: {
        [key: string]: unknown;
    } | null | undefined;
    chainIds: string[];
    type: import("@moralisweb3/core").Camelize<"wallet" | "contract">;
    id?: string | undefined;
    status?: "active" | "paused" | "error" | undefined;
}, {
    address: string | undefined;
    tokenAddress: string | undefined;
    chainIds: (string | number)[];
    chains: import("@moralisweb3/evm-utils").EvmChain[];
    webhookUrl: string;
    description: string;
    tag: string;
    topic0?: string | null | undefined;
    includeNativeTxs?: boolean | undefined;
    abi?: {
        [key: string]: unknown;
    } | null | undefined;
    filter?: {
        [key: string]: unknown;
    } | null | undefined;
    type: import("@moralisweb3/core").Camelize<"wallet" | "contract">;
    id?: string | undefined;
    status?: "active" | "paused" | "error" | undefined;
}, import("../resolvers/updateStreamEvm").Params>>;
//# sourceMappingURL=update.d.ts.map