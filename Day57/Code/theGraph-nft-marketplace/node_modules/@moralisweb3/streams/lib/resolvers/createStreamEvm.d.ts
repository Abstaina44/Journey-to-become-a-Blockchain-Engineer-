import { Camelize } from '@moralisweb3/core';
import { EvmAddress, EvmAddressish, EvmChain, EvmChainish } from '@moralisweb3/evm-utils';
import { operations } from '../generated/types';
declare const name = "CreateStream";
declare type Name = typeof name;
declare type BodyParams = operations[Name]['requestBody']['content']['application/json'];
declare type ApiParams = BodyParams;
export interface Params extends Camelize<Omit<ApiParams, 'tokenAddress' | 'address' | 'chainIds'>> {
    tokenAddress?: EvmAddressish;
    address?: EvmAddressish;
    chains: EvmChainish[];
}
export declare const createStreamEvm: import("@moralisweb3/api-utils").EndpointFactory<{
    webhookUrl: string;
    description: string;
    tag: string;
    tokenAddress?: string | null | undefined;
    topic0?: string | null | undefined;
    includeNativeTxs?: boolean | undefined;
    abi?: {
        [key: string]: unknown;
    } | null | undefined;
    filter?: {
        [key: string]: unknown;
    } | null | undefined;
    address?: string | null | undefined;
    chainIds: string[];
    type: "wallet" | "contract";
}, Params, {
    webhookUrl: string;
    description: string;
    tag: string;
    tokenAddress?: string | null | undefined;
    topic0?: string | null | undefined;
    includeNativeTxs?: boolean | undefined;
    abi?: {
        [key: string]: unknown;
    } | null | undefined;
    filter?: {
        [key: string]: unknown;
    } | null | undefined;
    address?: string | null | undefined;
    chainIds: string[];
    type: "wallet" | "contract";
    id?: string | undefined;
    status?: "active" | "paused" | "error" | undefined;
}, {
    address: EvmAddress | undefined;
    tokenAddress: EvmAddress | undefined;
    chains: EvmChain[];
    webhookUrl: string;
    description: string;
    tag: string;
    topic0?: string | null | undefined;
    includeNativeTxs?: boolean | undefined;
    abi?: {
        [key: string]: unknown;
    } | null | undefined;
    filter?: {
        [key: string]: unknown;
    } | null | undefined;
    chainIds: string[];
    type: Camelize<"wallet" | "contract">;
    id?: string | undefined;
    status?: "active" | "paused" | "error" | undefined;
}, {
    address: string | undefined;
    tokenAddress: string | undefined;
    chainIds: (string | number)[];
    chains: EvmChain[];
    webhookUrl: string;
    description: string;
    tag: string;
    topic0?: string | null | undefined;
    includeNativeTxs?: boolean | undefined;
    abi?: {
        [key: string]: unknown;
    } | null | undefined;
    filter?: {
        [key: string]: unknown;
    } | null | undefined;
    type: Camelize<"wallet" | "contract">;
    id?: string | undefined;
    status?: "active" | "paused" | "error" | undefined;
}>;
export {};
//# sourceMappingURL=createStreamEvm.d.ts.map